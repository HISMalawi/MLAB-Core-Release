var A=Object.defineProperty;var N=(s,e,n)=>e in s?A(s,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):s[e]=n;var m=(s,e,n)=>N(s,typeof e!="symbol"?e+"":e,n);import{_ as q}from"./BBiETNY7.js";import{_ as P}from"./C3HP_w3b.js";import{_ as B}from"./DPFzGlD8.js";import{aC as E,a as L,u as d,l as O,m as h,b as x,e as g,g as t,f as a,p as b,n as w,t as p,z as f,i as U,U as F,s as I,aB as J,_ as R}from"./Br_iYJbE.js";import{u as M}from"./C7tJ_rpQ.js";import{h as H,A as l,u as Y,i as j,e as z,f as K,p as u,P as W}from"./Dog3sDT3.js";import{e as G}from"./D_g9DqRP.js";import{u as v}from"./CLSVoOUE.js";import{P as Q}from"./CsuZ4PXZ.js";import{r as X}from"./IuRR0rJH.js";import{r as Z}from"./Br7KoB9m.js";import{r as $}from"./BSk7cgnm.js";import{I as ee,j as te,E as se,A as ie,F as ne}from"./XkQiKG-9.js";import{_ as oe}from"./DAoM-dCf.js";import"./CsEX3TnJ.js";import"./DbE2jSl7.js";import"./E-5_2-Nn.js";import"./tiZpgdZ8.js";import"./a0kEX_gA.js";import"./2-4F2Czp.js";import"./AtAlRHB5.js";import"./BoyxTlis.js";import"./BxXqpYSD.js";import"./CKyme56o.js";import"./BIfGgD6z.js";import"./DJKhCWXE.js";class ae{constructor(e){m(this,"client",{id:"",uuid:""});m(this,"tests",[]);m(this,"order",{priority:1,requested_by:"",collected_by:v().$state.department,sample_collected_time:"",tracking_number:""});m(this,"encounter",{sending_facility:1,encounter_type:1,facility_section:1});this.client.id=e}createEncounter(e,n){this.encounter={...this.encounter,encounter_type:e,facility_section:n}}buildOrder(e="",n=H().format("YYYY-MM-DD HH:mm:ss")){this.order.requested_by=e,this.order.sample_collected_time=n}setTests(e,n){this.tests=n.map(c=>({specimen:e,test_type:c}))}async createOrder(e){return l.postJson("orders",{tests:this.tests,order:this.order,encounter:this.encounter,client:this.client,lab_location:e})}}const re={components:{Listbox:ee,ListboxButton:te,ListboxLabel:se,ListboxOptions:ie,ListboxOption:ne,IdentificationIcon:X},setup(){M({title:`${Q.name.toUpperCase()} - New Test`})},data(){return{ArrowDownTrayIcon:Z,CheckIcon:$,pages:[{name:"Home",link:"/home"},{name:"Tests",link:"/tests"}],patient:{date_of_birth:"",first_name:"",middle_name:"",last_name:"",client_id:0,id:0,sex:"",birth_date_estimated:!1},visitTypes:new Array,specimens:new Array,wards:new Array,tests:new Array,visitTypeSelected:{name:"select visit type",id:0},specimenSelected:{name:"select specimen",id:0},wardSelected:{name:"select ward",id:0},testsSelected:new Array,physician:"",sampleCollectionDate:"",requestingTitle:"Requesting Ward",isBDE:!1,authStore:v(),alert:Y(),route:E(),token:L("token")}},computed:{patientAge(){return j(this.patient.date_of_birth)},patientSex(){return this.patient.sex.match(/f/i)?"Female":"Male"},patientName(){return`${this.patient.first_name} ${this.patient.middle_name} ${this.patient.last_name}`},patientNumber(){return this.patient.client_id},currentDepartment(){return this.authStore.user.departments.find(s=>s.name===this.authStore.department)}},methods:{getPatient(s){const e={route:`${z.clients}/${s}`,method:"GET",token:`${this.token}`};K(e).then(({data:n,error:c,pending:i})=>{n.value&&(this.patient=n.value),c.value&&console.error(G)})},getIdFromName(s,e){const n=s.find(c=>c.name===e);return n?n.id:null},async saveChanges(){const s=new ae(this.patient.client_id);s.createEncounter(this.visitTypeSelected.id,this.wardSelected.id),s.buildOrder(this.physician,this.sampleCollectionDate),s.setTests(this.specimenSelected.id,this.testsSelected);const e=this.getIdFromName(this.authStore.locations,this.authStore.selectedLocation),n=await s.createOrder(Number(e));u(n)||(d().$toast.success(`Order with accession number ${n.accession_number} has been created successfully!`),await this.alert.alertConfirmation({message:"Do you want to print specimen label?"})&&await W.printSpecimenLabel(n.accession_number)),d().$router.push("/tests")},validator(){return this.visitTypeSelected.id==0?(d().$toast.warning("Please select visit type and try again!"),!1):this.specimenSelected.id==0?(d().$toast.warning("Please select specimen and try again!"),!1):this.wardSelected.id==0?(d().$toast.warning("Please select ward and try again!"),!1):this.testsSelected.length==0?(d().$toast.warning("Please select tests and try again!"),!1):!0}},watch:{async visitTypeSelected(s){s.name.toLowerCase()=="referral"?(this.requestingTitle="Requesting Facility",this.wardSelected={name:"select facility",id:0}):this.requestingTitle="Requesting Ward",this.wards=new Array,u(this.wards[s.id])&&(this.wards=await l.getJson("encounter_type_facility_section_mappings/facility_sections",{encounter_type_id:s.id}))},async specimenSelected(s){u(this.tests[s.id])&&(this.tests[s.id]=await l.getJson("specimen/test_types",{specimen_id:s.id,department_id:this.currentDepartment.id})||[])},authStore:{async handler(s){for(const e in this.tests)this.tests.hasOwnProperty(e)&&delete this.tests[e];u(this.specimenSelected)||(this.tests[this.specimenSelected.id]=await l.getJson("specimen/test_types",{specimen_id:this.specimenSelected.id,department_id:s.user.departments.find(e=>e.name===s.department).id})||[]),l.getJson("specimen",{department_id:this.currentDepartment.id}).then(e=>this.specimens=e)},deep:!0}},created(){l.getJson("encounter_types").then(s=>this.visitTypes=s.data),l.getJson("specimen",{department_id:this.currentDepartment.id}).then(s=>this.specimens=s),this.getPatient(this.route.query.patient_id)}},le={class:"py-5 px-5"},ce={class:"mt-5"},de={class:"flex items-center space-x-2"},me=t("img",{src:oe,class:"w-auto h-6",alt:"flash-icon"},null,-1),pe={class:"text-xl font-semibold uppercase"},ue={class:"border rounded mt-5"},_e=t("div",{class:"bg-gray-50 flex items-center space-x-3 px-2 py-2 rounded-tr rounded-tl border-b"},[t("img",{src:J,class:"h-8 w-auto",alt:"fever-icon"}),t("h3",{class:"font-semibold text-lg"},"Patient Details")],-1),he={class:"w-full py-5 px-5"},fe={class:"flex items-center space-x-20"},ye={class:"flex items-center space-x-3"},xe=t("h3",{class:"font-medium"},"Patient Number:",-1),ge={class:"mt-1 text-gray-600"},be={class:"flex items-center space-x-3"},we=t("h3",{class:"font-medium"},"Age",-1),ve={class:"mt-1 text-gray-600"},Se={class:"flex items-center space-x-3"},ke=t("h3",{class:"font-medium"},"Sex:",-1),Ve={class:"mt-1 text-gray-600"},Ce={class:"border mt-5 rounded"},De=t("div",{class:"bg-gray-50 flex items-center space-x-3 px-2 py-2 rounded-tr rounded-tl border-b"},[t("h3",{class:"font-semibold text-lg"},"Order Details")],-1),Te={class:"px-5 py-5"},Ae={class:"w-full mb-5"},Ne={class:"flex flex-col space-y-2"},qe={class:"w-full flex items-center space-x-10 mb-5"},Pe={class:"w-1/2 flex flex-col space-y-2"},Be=t("label",{class:"font-medium"},"Visit Type",-1),Ee={class:"w-1/2 flex flex-col space-y-2"},Le={class:"font-medium"},Oe={class:"w-full flex items-center space-x-10 mb-5"},Ue={class:"w-1/2 flex flex-col space-y-2"},Fe=t("label",{class:"font-medium"},"Specimen Type",-1),Ie={class:"w-1/2 flex flex-col space-y-2"},Je=t("label",{class:"font-medium"},"Tests",-1),Re={class:"w-full my-6"},Me=t("label",{class:"font-medium"},"Back Data Entry",-1),He={key:0,class:"w-full mb-5 flex flex-col space-y-2"},Ye=t("label",{class:"font-medium"},"Sample collection date",-1),je={class:"w-full"};function ze(s,e,n,c,i,r){const S=q,k=P,y=h("FormKit"),_=B,V=h("multi-select"),C=h("datepicker"),D=R;return x(),g("div",null,[t("div",le,[a(S,{pages:i.pages},null,8,["pages"]),t("div",ce,[t("div",de,[me,t("h3",pe,[b(" New order for "),t("span",null,[a(k,{class:"text-sky-500 text-xl font-semibold",to:`/patients?search=${r.patientName.toLowerCase().replace(" ","+")}`},{default:w(()=>[b(" “"+p(r.patientName)+"” ",1)]),_:1},8,["to"])])])]),t("div",ue,[_e,t("div",he,[t("div",fe,[t("div",ye,[xe,t("p",ge,p(r.patientNumber),1)]),t("div",be,[we,t("p",ve,p(r.patientAge)+" years old",1)]),t("div",Se,[ke,t("p",Ve,p(r.patientSex),1)])])])]),a(y,{type:"form","submit-label":"Update",onSubmit:e[7]||(e[7]=T=>r.validator()&&r.saveChanges()),actions:!1,id:"submitForm"},{default:w(({value:T})=>[t("div",Ce,[De,t("div",Te,[t("div",Ae,[t("div",Ne,[a(y,{label:"Requesting Physician",validation:"required",modelValue:i.physician,"onUpdate:modelValue":e[0]||(e[0]=o=>i.physician=o)},null,8,["modelValue"])])]),t("div",qe,[t("div",Pe,[Be,a(_,{items:i.visitTypes,modelValue:i.visitTypeSelected,"onUpdate:modelValue":e[1]||(e[1]=o=>i.visitTypeSelected=o),class:f(i.visitTypeSelected.name=="select visit type"&&"text-gray-600")},null,8,["items","modelValue","class"])]),t("div",Ee,[t("label",Le,p(i.requestingTitle),1),a(_,{isSearchable:"",items:i.wards,modelValue:i.wardSelected,"onUpdate:modelValue":e[2]||(e[2]=o=>i.wardSelected=o),class:f(i.wardSelected.name=="select ward"&&"text-gray-600")},null,8,["items","modelValue","class"])])]),t("div",Oe,[t("div",Ue,[Fe,a(_,{items:i.specimens,modelValue:i.specimenSelected,"onUpdate:modelValue":e[3]||(e[3]=o=>i.specimenSelected=o),class:f(i.specimenSelected.name=="select specimen"&&"text-gray-600")},null,8,["items","modelValue","class"])]),t("div",Ie,[Je,a(V,{required:!0,style:{"--ms-max-height":"none !important"},modelValue:i.testsSelected,"onUpdate:modelValue":e[4]||(e[4]=o=>i.testsSelected=o),options:i.tests[i.specimenSelected.id||0],placeholder:"select tests",mode:"tags",clear:"",searchable:"",class:"focus:ring-none fcus:border-none focus:outline-none multiselect-green"},null,8,["modelValue","options"])])]),t("div",Re,[U(t("input",{type:"checkbox",placeholder:"Name of physician",class:"mr-3 focus:outline-none focus:ring-2 focus:ring-sky-500 focus:border-none transition duration-150","onUpdate:modelValue":e[5]||(e[5]=o=>i.isBDE=o)},null,512),[[F,i.isBDE]]),Me]),i.isBDE?(x(),g("div",He,[Ye,a(C,{required:"",position:"left",placeholder:"select date",range:!1,"input-class-name":"datepicker",modelValue:i.sampleCollectionDate,"onUpdate:modelValue":e[6]||(e[6]=o=>i.sampleCollectionDate=o)},null,8,["modelValue"])])):I("",!0),t("div",je,[a(D,{type:"submit",text:"Place order",color:"primary",icon:i.CheckIcon,click:()=>{}},null,8,["icon"])])])])]),_:1})])])])}const bt=O(re,[["render",ze]]);export{bt as default};
