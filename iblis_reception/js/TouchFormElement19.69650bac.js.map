{"version":3,"file":"js/TouchFormElement19.69650bac.js","mappings":"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","sources":["webpack://IBLISReception/./src/components/FormElements/HisSelect.vue?da85","webpack://IBLISReception/./src/components/FormElements/HisSelect.vue","webpack://IBLISReception/./src/components/FormElements/HisSelect.vue?0559"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_text_input = _resolveComponent(\"his-text-input\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_view_port = _resolveComponent(\"view-port\")!\n  const _component_his_keyboard = _resolveComponent(\"his-keyboard\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_view_port, {\n      showFull: !_ctx.showKeyboard\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_component_his_text_input, {\n          readonly: !_ctx.showKeyboard,\n          value: _ctx.selected,\n          onOnValue: _cache[0] || (_cache[0] = (value) => _ctx.onKbValue(value, _ctx.showKeyboard))\n        }, null, 8, [\"readonly\", \"value\"]),\n        _createVNode(_component_ion_list, { class: \"view-port-content\" }, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filtered, (item, index) => {\n              return (_openBlock(), _createBlock(_component_ion_item, {\n                class: \"his-md-text\",\n                button: \"\",\n                color: item.label === _ctx.selected ? 'lightblue': '',\n                lines: item.label === _ctx.selected ? 'none':'',\n                key: index,\n                disabled: 'disabled' in item && item.disabled ? true: false,\n                onClick: ($event: any) => (_ctx.onselect(item))\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_label, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(item.label), 1)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 2\n              }, 1032, [\"color\", \"lines\", \"disabled\", \"onClick\"]))\n            }), 128))\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }, 8, [\"showFull\"]),\n    (_ctx.showKeyboard)\n      ? (_openBlock(), _createBlock(_component_his_keyboard, {\n          key: 0,\n          kbConfig: _ctx.keyboard,\n          onKeyPress: _ctx.keypress\n        }, null, 8, [\"kbConfig\", \"onKeyPress\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","<template>\n    <view-port :showFull=\"!showKeyboard\">\n        <his-text-input :readonly=\"!showKeyboard\" :value=\"selected\" @onValue=\"(value) => onKbValue(value, showKeyboard)\" /> \n        <ion-list class='view-port-content'>\n            <ion-item \n                class=\"his-md-text\"\n                button v-for=\"(item, index) in filtered\" \n                :color=\"item.label === selected ? 'lightblue': ''\"\n                :lines=\"item.label === selected ? 'none':''\" \n                :key=\"index\"\n                :disabled=\"'disabled' in item && item.disabled ? true: false\"\n                @click=\"onselect(item)\"> \n                <ion-label> {{item.label}} </ion-label>\n            </ion-item>\n        </ion-list>\n    </view-port>\n    <his-keyboard v-if=\"showKeyboard\" :kbConfig=\"keyboard\" :onKeyPress=\"keypress\"/>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { Option } from '../Forms/FieldInterface'\nimport SelectMixin from \"@/components/FormElements/SelectMixin.vue\"\nimport { find } from \"lodash\"\n\nexport default defineComponent({\n    name: \"HisSelect\",\n    mixins: [SelectMixin],\n    data: () => ({\n        isInit: false as boolean\n    }),\n    watch: {\n        clear() { \n            this.clearSelection() \n        }\n    },\n    mounted() {\n        this.init()\n    },\n    activated() {\n        this.init()    \n    },\n    methods: {\n        async init() {\n            this.$emit('onFieldActivated', this)\n            this.listData = await this.options(this.fdata)\n            if (!this.isInit) {\n                await this.setDefaultValue()\n            }\n            this.isInit = true\n        },\n        async setDefaultValue() {\n            if(this.defaultValue) {\n                const defaults: string = await this.defaultValue(this.fdata, this.cdata, this.selected)\n                if (defaults) {\n                    const found = find(this.listData, {label: defaults}) || find(this.listData, {value: defaults}) \n                    if (found) {\n                        this.onselect(found)\n                    } else {\n                        this.selected = defaults\n                        this.filter = defaults\n                    }\n                }\n            }\n        },\n        async onselect(item: Option) {\n            this.selected = item.label\n            if (this.onValue) {\n                const ok = await this.onValue(item, this)\n                if (!ok) {\n                    this.selected = ''\n                    return\n                }\n            }\n            this.$emit('onValue', item)\n        }\n    }\n})\n</script>\n<style scoped>\n   .half .view-port-content {\n        height: 85%;\n        padding-bottom: 0px;\n    }\n    .view-port-content {\n        height: 91%;\n        padding-bottom: 0px;\n    }\n    #view-port {\n        height: 82vh;\n    }\n</style>","import { render } from \"./HisSelect.vue?vue&type=template&id=bddfdf86&scoped=true&ts=true\"\nimport script from \"./HisSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./HisSelect.vue?vue&type=script&lang=ts\"\n\nimport \"./HisSelect.vue?vue&type=style&index=0&id=bddfdf86&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bddfdf86\"]])\n\nexport default __exports__"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_text_input","_resolveComponent","_component_ion_label","_component_ion_item","_component_ion_list","_component_view_port","_component_his_keyboard","_openBlock","_createElementBlock","_Fragment","_createVNode","showFull","showKeyboard","default","_withCtx","readonly","value","selected","onOnValue","onKbValue","class","_renderList","filtered","item","index","_createBlock","button","color","label","lines","key","disabled","onClick","$event","onselect","_createTextVNode","_toDisplayString","_","kbConfig","keyboard","onKeyPress","keypress","_createCommentVNode","defineComponent","name","mixins","SelectMixin","data","isInit","watch","clear","this","clearSelection","mounted","init","activated","methods","$emit","listData","options","fdata","setDefaultValue","defaultValue","defaults","cdata","found","find","filter","onValue","ok","__exports__"],"sourceRoot":""}