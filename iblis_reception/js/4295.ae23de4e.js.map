{"version":3,"file":"js/4295.ae23de4e.js","mappings":"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","sources":["webpack://IBLISReception/./src/views/RejectOrder.vue?26b1","webpack://IBLISReception/./src/views/RejectOrder.vue","webpack://IBLISReception/./src/views/RejectOrder.vue?2aeb"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { class: \"keyboard\" }\n\nimport { Client } from \"@/composables/client\";\nimport { computed, onMounted, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { close } from \"ionicons/icons\";\nimport { alertConfirmation, toastSuccess } from \"@/utils/Alerts\";\nimport {\n    IonButtons,\n    IonButton,\n    IonIcon,\n    IonHeader,\n    IonContent,\n    IonToolbar,\n    IonTitle,\n    IonItem,\n    IonLabel,\n    IonFooter,\n    IonList,\n    IonPage,\n    IonSelect,\n    IonSelectOption,\n    IonInput,\n} from \"@ionic/vue\";\nimport SimpleKeyboard from \"@/components/Keyboard/SimpleKeyBoard.vue\";\n\ntype LabLocation = {\n    id: number;\n    name: string;\n};\n\ntype Test = {\n    specimen_id: number;\n    specimen: string;\n    test_type: string;\n    test_type_short_name: string;\n};\n\ntype Order = {\n    source: string;\n    client_id: number;\n    first_name: string;\n    middle_name: string;\n    last_name: string;\n    sex: \"M\" | \"F\";\n    date_of_birth: string;\n    birth_date_estimated: boolean;\n    uuid: string;\n    created_at: string;\n    lab_location: LabLocation;\n    physical_address: string;\n    npid: string;\n    order_id: number;\n    accession_number: string;\n    tracking_number: string;\n    requested_by: string;\n    collected_by: string;\n    registered_by: string;\n    priority: string;\n    sending_facility: string;\n    destination_facility: string;\n    date_created: string;\n    order_status_id: number;\n    order_status_name: string;\n    tests: Test[];\n};\n\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'RejectOrder',\n  emits: [\"updated\"],\n  setup(__props, { emit: __emit }) {\n\nconst route = useRoute();\nconst router = useRouter();\nconst client = Client();\nconst details = ref<Order>();\nconst personTalkedTo = ref<string>(\"\");\nconst statusReasons = ref<Array<{ id: number; description: string }>>([]);\nconst selectedStatusReason = ref<string>(\"\");\n\nconst fetchOrderDetails = async () => {\n    const res = await client.getJson(`/orders/${route.params.identifier}`);\n    details.value = res?.data;\n};\n\nconst handleDialog = (): void => {\n    router.back();\n};\n\nconst cancelReject = async () => {\n    const ok = await alertConfirmation(\"Are you sure you want to cancel?\");\n    if (ok) handleDialog();\n};\nconst emits = __emit;\nconst showKeyboard = ref<boolean>(false);\n\nconst enterInput = (value: string): void => {\n    if (value) showKeyboard.value = true;\n};\n\nconst onChange = (input: string): void => {\n    personTalkedTo.value = input;\n};\n\nconst onKeyPress = (input: string): void => {\n    if (input == \"{enter}\") {\n        showKeyboard.value = false;\n    }\n};\n\nconst getStatusReasons = async (): Promise<void> => {\n    const res = await client.getJson(\"status_reasons\");\n    statusReasons.value = res?.data;\n};\nconst isset = computed(\n    () => personTalkedTo.value && selectedStatusReason.value\n);\n\nconst submitForm = async (): Promise<void> => {\n    const reasonId = statusReasons.value.filter(\n        (status) => status.description == selectedStatusReason.value\n    );\n    const res = await client.putJson(\n        `order_statuses/rejected`,\n        {\n            order_id: details.value?.order_id,\n            status_reason_id: reasonId[0].id,\n            person_talked_to: personTalkedTo.value\n        }\n    );\n    if (res?.data) {\n        toastSuccess(\"Specimen Rejected Successfully\");\n        router.push(\"/tests\");\n        emits(\"updated\", true);\n    }\n};\n\nonMounted(() => {\n    fetchOrderDetails();\n    getStatusReasons();\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_unref(IonPage), null, {\n      default: _withCtx(() => [\n        _createVNode(_unref(IonHeader), null, {\n          default: _withCtx(() => [\n            _createVNode(_unref(IonToolbar), null, {\n              default: _withCtx(() => [\n                _createVNode(_unref(IonTitle), { style: {\"font-size\":\"25px\",\"font-weight\":\"600\"} }, {\n                  default: _withCtx(() => _cache[3] || (_cache[3] = [\n                    _createTextVNode(\"Reject Order\")\n                  ])),\n                  _: 1\n                }),\n                _createVNode(_unref(IonButtons), { slot: \"end\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(IonButton), {\n                      strong: true,\n                      onClick: handleDialog\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(IonIcon), {\n                          size: \"large\",\n                          icon: _unref(close)\n                        }, null, 8, [\"icon\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(IonContent), null, {\n          default: _withCtx(() => [\n            _createVNode(_unref(IonList), null, {\n              default: _withCtx(() => [\n                _createVNode(_unref(IonItem), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(IonLabel), { style: {\"font-size\":\"20px\",\"font-weight\":\"600\"} }, {\n                      default: _withCtx(() => _cache[4] || (_cache[4] = [\n                        _createTextVNode(\"Test Types\")\n                      ])),\n                      _: 1\n                    }),\n                    _createVNode(_unref(IonLabel), {\n                      slot: \"end\",\n                      style: {\"font-size\":\"18px\"}\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(details.value?.tests?.map((test) =>\n                            test.test_type).join(\", \")), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_unref(IonItem), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(IonLabel), { style: {\"font-size\":\"20px\",\"font-weight\":\"600\"} }, {\n                      default: _withCtx(() => _cache[5] || (_cache[5] = [\n                        _createTextVNode(\"Specimen\")\n                      ])),\n                      _: 1\n                    }),\n                    _createVNode(_unref(IonLabel), {\n                      slot: \"end\",\n                      style: {\"font-size\":\"18px\"}\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(details.value?.tests ? details.value?.tests[0]?.specimen :\n                            ''), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_unref(IonItem), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(IonLabel), { style: {\"font-size\":\"20px\",\"font-weight\":\"600\"} }, {\n                      default: _withCtx(() => _cache[6] || (_cache[6] = [\n                        _createTextVNode(\"Patient Name\")\n                      ])),\n                      _: 1\n                    }),\n                    _createVNode(_unref(IonLabel), {\n                      slot: \"end\",\n                      style: {\"font-size\":\"18px\"}\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(details.value ?\n                                `${details.value?.first_name} ${details.value?.middle_name ? details.value?.middle_name :\n                                    ''} ${details.value?.last_name}` :\n                                ''), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_unref(IonItem), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(IonLabel), { style: {\"font-size\":\"20px\",\"font-weight\":\"600\"} }, {\n                      default: _withCtx(() => _cache[7] || (_cache[7] = [\n                        _createTextVNode(\"Tracking Number\")\n                      ])),\n                      _: 1\n                    }),\n                    _createVNode(_unref(IonLabel), {\n                      slot: \"end\",\n                      style: {\"font-size\":\"18px\"}\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(details.value?.tracking_number), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_unref(IonItem), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(IonLabel), { style: {\"font-size\":\"20px\",\"font-weight\":\"600\"} }, {\n                      default: _withCtx(() => _cache[8] || (_cache[8] = [\n                        _createTextVNode(\"Accession Number\")\n                      ])),\n                      _: 1\n                    }),\n                    _createVNode(_unref(IonLabel), {\n                      slot: \"end\",\n                      style: {\"font-size\":\"18px\"}\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(details.value?.accession_number), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_unref(IonItem), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(IonLabel), { style: {\"font-size\":\"20px\",\"font-weight\":\"600\"} }, {\n                      default: _withCtx(() => _cache[9] || (_cache[9] = [\n                        _createTextVNode(\"Person Talked To: \")\n                      ])),\n                      _: 1\n                    }),\n                    _createVNode(_unref(IonInput), {\n                      modelValue: personTalkedTo.value,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((personTalkedTo).value = $event)),\n                      required: \"\",\n                      placeholder: \"Enter full name\",\n                      onIonFocus: _cache[1] || (_cache[1] = ($event: any) => (enterInput('person'))),\n                      style: {\"font-size\":\"18px\"}\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_unref(IonItem), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(IonLabel), { style: {\"font-size\":\"20px\",\"font-weight\":\"600\"} }, {\n                      default: _withCtx(() => _cache[10] || (_cache[10] = [\n                        _createTextVNode(\"Rejection Reason: \")\n                      ])),\n                      _: 1\n                    }),\n                    _createVNode(_unref(IonSelect), {\n                      required: \"\",\n                      modelValue: selectedStatusReason.value,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((selectedStatusReason).value = $event))\n                    }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(statusReasons.value, (reason) => {\n                          return (_openBlock(), _createBlock(_unref(IonSelectOption), {\n                            key: reason.description,\n                            value: reason.description,\n                            style: {\"font-size\":\"18px\"}\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(_toDisplayString(reason.description), 1)\n                            ]),\n                            _: 2\n                          }, 1032, [\"value\"]))\n                        }), 128))\n                      ]),\n                      _: 1\n                    }, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _withDirectives(_createElementVNode(\"div\", _hoisted_1, [\n              _createVNode(SimpleKeyboard, {\n                onOnChange: onChange,\n                onOnKeyPress: onKeyPress,\n                input: personTalkedTo.value,\n                inputName: personTalkedTo.value\n              }, null, 8, [\"input\", \"inputName\"])\n            ], 512), [\n              [_vShow, showKeyboard.value]\n            ])\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(IonFooter), null, {\n          default: _withCtx(() => [\n            _createVNode(_unref(IonToolbar), {\n              color: \"light\",\n              style: {\"padding\":\"5px\"}\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_unref(IonButton), {\n                  slot: \"start\",\n                  size: \"large\",\n                  color: \"danger\",\n                  onClick: cancelReject\n                }, {\n                  default: _withCtx(() => _cache[11] || (_cache[11] = [\n                    _createTextVNode(\" Cancel \")\n                  ])),\n                  _: 1\n                }),\n                _createVNode(_unref(IonButton), {\n                  slot: \"end\",\n                  disabled: !isset.value,\n                  size: \"large\",\n                  color: \"success\",\n                  onClick: submitForm\n                }, {\n                  default: _withCtx(() => _cache[12] || (_cache[12] = [\n                    _createTextVNode(\" Reject \")\n                  ])),\n                  _: 1\n                }, 8, [\"disabled\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\n    <div>\n        <ion-page>\n            <ion-header>\n                <ion-toolbar>\n                    <ion-title style=\"font-size: 25px; font-weight: 600\">Reject Order</ion-title>\n                    <ion-buttons slot=\"end\">\n                        <ion-button :strong=\"true\" @click=\"handleDialog\">\n                            <ion-icon size=\"large\" :icon=\"close\"></ion-icon>\n                        </ion-button>\n                    </ion-buttons>\n                </ion-toolbar>\n            </ion-header>\n            <ion-content>\n                <ion-list>\n                    <ion-item>\n                        <ion-label style=\"font-size: 20px; font-weight: 600\">Test Types</ion-label>\n                        <ion-label slot=\"end\" style=\"font-size: 18px;\">{{ details?.tests?.map((test) =>\n                            test.test_type).join(\", \") }}</ion-label>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label style=\"font-size: 20px; font-weight: 600\">Specimen</ion-label>\n                        <ion-label slot=\"end\" style=\"font-size: 18px;\">{{ details?.tests ? details?.tests[0]?.specimen :\n                            '' }}</ion-label>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label style=\"font-size: 20px; font-weight: 600\">Patient Name</ion-label>\n                        <ion-label slot=\"end\" style=\"font-size: 18px;\">\n                            {{ details ?\n                                `${details?.first_name} ${details?.middle_name ? details?.middle_name :\n                                    ''} ${details?.last_name}` :\n                                ''\n                            }}\n                        </ion-label>\n\n                    </ion-item>\n                    <ion-item>\n                        <ion-label style=\"font-size: 20px; font-weight: 600\">Tracking Number</ion-label>\n                        <ion-label slot=\"end\" style=\"font-size: 18px;\">{{ details?.tracking_number }}</ion-label>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label style=\"font-size: 20px; font-weight: 600\">Accession Number</ion-label>\n                        <ion-label slot=\"end\" style=\"font-size: 18px;\">{{ details?.accession_number }}</ion-label>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label style=\"font-size: 20px; font-weight: 600\">Person Talked To:\n                        </ion-label>\n                        <ion-input v-model=\"personTalkedTo\" required placeholder=\"Enter full name\"\n                            @ion-focus=\"enterInput('person')\" style=\"font-size: 18px;\" />\n                    </ion-item>\n\n                    <ion-item>\n                        <ion-label style=\"font-size: 20px; font-weight: 600\">Rejection Reason:\n                        </ion-label>\n                        <ion-select required v-model=\"selectedStatusReason\">\n                            <ion-select-option v-for=\"reason in statusReasons\" v-bind:key=\"reason.description\"\n                                :value=\"reason.description\" style=\"font-size: 18px;\">{{ reason.description\n                                }}</ion-select-option></ion-select>\n                    </ion-item>\n                </ion-list>\n                <div class=\"keyboard\" v-show=\"showKeyboard\">\n                    <SimpleKeyboard @onChange=\"onChange\" @onKeyPress=\"onKeyPress\" :input=\"personTalkedTo\"\n                        :inputName=\"personTalkedTo\" />\n                </div>\n            </ion-content>\n\n            <ion-footer>\n                <ion-toolbar color=\"light\" style=\"padding: 5px\">\n                    <ion-button slot=\"start\" size=\"large\" color=\"danger\" @click=\"cancelReject\">\n                        Cancel\n                    </ion-button>\n                    <ion-button slot=\"end\" :disabled=\"!isset\" size=\"large\" color=\"success\" @click=\"submitForm\">\n                        Reject\n                    </ion-button>\n                </ion-toolbar></ion-footer>\n        </ion-page>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Client } from \"@/composables/client\";\nimport { computed, onMounted, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { close } from \"ionicons/icons\";\nimport { alertConfirmation, toastSuccess } from \"@/utils/Alerts\";\nimport {\n    IonButtons,\n    IonButton,\n    IonIcon,\n    IonHeader,\n    IonContent,\n    IonToolbar,\n    IonTitle,\n    IonItem,\n    IonLabel,\n    IonFooter,\n    IonList,\n    IonPage,\n    IonSelect,\n    IonSelectOption,\n    IonInput,\n} from \"@ionic/vue\";\nimport SimpleKeyboard from \"@/components/Keyboard/SimpleKeyBoard.vue\";\n\ntype LabLocation = {\n    id: number;\n    name: string;\n};\n\ntype Test = {\n    specimen_id: number;\n    specimen: string;\n    test_type: string;\n    test_type_short_name: string;\n};\n\ntype Order = {\n    source: string;\n    client_id: number;\n    first_name: string;\n    middle_name: string;\n    last_name: string;\n    sex: \"M\" | \"F\";\n    date_of_birth: string;\n    birth_date_estimated: boolean;\n    uuid: string;\n    created_at: string;\n    lab_location: LabLocation;\n    physical_address: string;\n    npid: string;\n    order_id: number;\n    accession_number: string;\n    tracking_number: string;\n    requested_by: string;\n    collected_by: string;\n    registered_by: string;\n    priority: string;\n    sending_facility: string;\n    destination_facility: string;\n    date_created: string;\n    order_status_id: number;\n    order_status_name: string;\n    tests: Test[];\n};\n\n\nconst route = useRoute();\nconst router = useRouter();\nconst client = Client();\nconst details = ref<Order>();\nconst personTalkedTo = ref<string>(\"\");\nconst statusReasons = ref<Array<{ id: number; description: string }>>([]);\nconst selectedStatusReason = ref<string>(\"\");\n\nconst fetchOrderDetails = async () => {\n    const res = await client.getJson(`/orders/${route.params.identifier}`);\n    details.value = res?.data;\n};\n\nconst handleDialog = (): void => {\n    router.back();\n};\n\nconst cancelReject = async () => {\n    const ok = await alertConfirmation(\"Are you sure you want to cancel?\");\n    if (ok) handleDialog();\n};\nconst emits = defineEmits([\"updated\"]);\nconst showKeyboard = ref<boolean>(false);\n\nconst enterInput = (value: string): void => {\n    if (value) showKeyboard.value = true;\n};\n\nconst onChange = (input: string): void => {\n    personTalkedTo.value = input;\n};\n\nconst onKeyPress = (input: string): void => {\n    if (input == \"{enter}\") {\n        showKeyboard.value = false;\n    }\n};\n\nconst getStatusReasons = async (): Promise<void> => {\n    const res = await client.getJson(\"status_reasons\");\n    statusReasons.value = res?.data;\n};\nconst isset = computed(\n    () => personTalkedTo.value && selectedStatusReason.value\n);\n\nconst submitForm = async (): Promise<void> => {\n    const reasonId = statusReasons.value.filter(\n        (status) => status.description == selectedStatusReason.value\n    );\n    const res = await client.putJson(\n        `order_statuses/rejected`,\n        {\n            order_id: details.value?.order_id,\n            status_reason_id: reasonId[0].id,\n            person_talked_to: personTalkedTo.value\n        }\n    );\n    if (res?.data) {\n        toastSuccess(\"Specimen Rejected Successfully\");\n        router.push(\"/tests\");\n        emits(\"updated\", true);\n    }\n};\n\nonMounted(() => {\n    fetchOrderDetails();\n    getStatusReasons();\n});\n</script>\n\n<style scoped>\n.keyboard {\n    width: 100%;\n    bottom: 0;\n    position: absolute !important;\n    font-size: 30px;\n    text-transform: uppercase;\n    font-weight: 400;\n}\n</style>","import script from \"./RejectOrder.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./RejectOrder.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./RejectOrder.vue?vue&type=style&index=0&id=1e3e1ae2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1e3e1ae2\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_defineComponent","__name","emits","setup","__props","emit","__emit","route","useRoute","router","useRouter","client","Client","details","ref","personTalkedTo","statusReasons","selectedStatusReason","fetchOrderDetails","async","res","getJson","params","identifier","value","data","handleDialog","back","cancelReject","ok","alertConfirmation","showKeyboard","enterInput","onChange","input","onKeyPress","getStatusReasons","isset","computed","submitForm","_details$value","reasonId","filter","status","description","putJson","order_id","status_reason_id","id","person_talked_to","toastSuccess","push","onMounted","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","IonPage","default","_withCtx","IonHeader","IonToolbar","IonTitle","style","_createTextVNode","_","IonButtons","slot","IonButton","strong","onClick","IonIcon","size","icon","close","IonContent","IonList","IonItem","IonLabel","_details$value2","_toDisplayString","tests","map","test","test_type","join","_details$value3","_details$value4","specimen","_details$value5","_details$value6","_details$value7","_details$value8","first_name","middle_name","last_name","_details$value9","tracking_number","_details$value10","accession_number","IonInput","modelValue","$event","required","placeholder","onIonFocus","IonSelect","_Fragment","_renderList","reason","_createBlock","IonSelectOption","key","_withDirectives","_createElementVNode","SimpleKeyboard","onOnChange","onOnKeyPress","inputName","_vShow","IonFooter","color","disabled","__exports__"],"sourceRoot":""}